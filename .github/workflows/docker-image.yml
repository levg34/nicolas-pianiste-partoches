name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Determine Docker tag
      id: docker_tag
      run: |
        if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
          echo "TAG=$(echo $GITHUB_HEAD_REF | tr / -)" >> $GITHUB_OUTPUT
        else
          echo "TAG=latest" >> $GITHUB_OUTPUT  # Use 'latest' for pushes to main
        fi

    - name: Log in to Scaleway Container Registry
      env:
        SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
        SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
      run: |
        echo "$SCW_SECRET_KEY" | docker login -u "$SCW_ACCESS_KEY" --password-stdin rg.fr-par.scw.cloud

    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag nicolas-partoches:${{ steps.docker_tag.outputs.TAG }}

    - name: Tag the Docker image for Scaleway
      run: |
        docker tag nicolas-partoches:${{ steps.docker_tag.outputs.TAG }} rg.fr-par.scw.cloud/nicolas-pianiste/nicolas-partoches:${{ steps.docker_tag.outputs.TAG }}

    - name: Push the Docker image to Scaleway
      run: |
        docker push rg.fr-par.scw.cloud/nicolas-pianiste/nicolas-partoches:${{ steps.docker_tag.outputs.TAG }}

    - name: Output Docker tag
      id: output_tag
      run: |
        echo "TAG=${{ steps.docker_tag.outputs.TAG }}" >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Depends on the 'build' job
    if: ${{ github.event_name == 'push' }}  # Only run for pushes to main

    steps:
    - name: Install Scaleway CLI
      run: |
        curl -Lo scw https://github.com/scaleway/scaleway-cli/releases/download/v2.20.0/scw-2.20.0-linux-x86_64
        # chmod +x scw
        # sudo mv scw /usr/local/bin/

    - name: Redeploy Serverless Container
      env:
        SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
        SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
      run: |
        scw init secret-key="$SCW_SECRET_KEY" access-key="$SCW_ACCESS_KEY"
        scw container deploy 22a33a10-edcb-4687-9213-f01f0b003284 image=rg.fr-par.scw.cloud/nicolas-pianiste/nicolas-partoches:${{ needs.build.outputs.output_tag.TAG }}

    - name: Wait for Serverless Container to be ready (with timeout)
      env:
        SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
        SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
      run: |
        timeout 300 scw container wait 22a33a10-edcb-4687-9213-f01f0b003284 state=ready || echo "::warning::Container did not become ready within the timeout period."
